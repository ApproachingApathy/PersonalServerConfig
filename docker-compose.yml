version: '3'
services:
  caddy:
    image: caddy:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "3305:3305"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/site:/srv
      - caddy_data:/data
      - caddy_config:/config
    networks: 
      - directus
      - foundry
      - gpodder

  cache:
    image: redis:6
    restart: unless-stopped
    container_name: cache
    networks:
      - directus

  directus:
    image: directus/directus:latest
    restart: unless-stopped
    container_name: directus
    ports:
      - 8055:8055
    volumes:
      # By default, uploads are stored in /directus/uploads
      # Always make sure your volumes matches the storage root when using
      # local driver
      - ./uploads:/directus/uploads
      # Make sure to also mount the volume when using SQLite
      - ./database:/directus/database
      # If you want to load extensions from the host
      - ./extensions:/directus/extensions
      - ./cred:/directus/cred
    networks:
      - directus
    depends_on:
      - cache
    environment:
      KEY: 'e52308e1-3f0c-4de8-b3ec-7a7923a0aeff'
      SECRET: ${DIRECTUS_SECRET}

      DB_CLIENT: 'sqlite3'
      DB_FILENAME: '/directus/database/directus-cms.sqlite'

      CACHE_ENABLED: 'true'
      CACHE_STORE: 'redis'
      CACHE_REDIS: 'redis://cache:6379'
      CACHE_AUTO_PURGE: true

      ADMIN_EMAIL: '${DIRECTUS_ADMIN_EMAIL}'
      ADMIN_PASSWORD: '${DIRECTUS_ADMIN_PASSWORD}'

      STORAGE_LOCATIONS: "gcs"
      STORAGE_GCS_DRIVER: "gcs"
      STORAGE_GCS_ROOT: "cms"
      STORAGE_GCS_BUCKET: "${G_CLOUD_BUCKET}"
      STORAGE_GCS_KEY_FILENAME: "/directus/${G_CLOUD_KEYFILE_PATH}"

      # Make sure to set this in production
      # (see https://docs.directus.io/configuration/config-options/#general)
      # PUBLIC_URL: 'https://cms.ephriamhenderson.dev'

  # Foundry
  foundry:
    image: felddy/foundryvtt:release
    restart: unless-stopped
    hostname: my_foundry_host
    init: true
    volumes:
      - ./foundry/data:/data
    environment:
      FOUNDRY_USERNAME: ${FOUNDRY_USERNAME}
      FOUNDRY_PASSWORD: ${FOUNDRY_PASSWORD}
      FOUNDRY_ADMIN_KEY: ${FOUNDRY_ADMIN_KEY}
    ports:
      - 30000:30000
    networks:
      - foundry
  
  gpodder:
    build:
      context: ./gpodder2go
      dockerfile: Dockerfile
    environment:
      VERIFIER_SECRET_KEY: ${G_PODDER_VERIFIER_KEY}
      G2G_USERNAME: ${G_PODDER_USERNAME}
      G2G_EMAIL: ${G_PODDER_EMAIL}
      G2G_DISPLAY_NAME: ${G_PODDER_EMAIL}
      G2G_PASSWORD: ${G_PODDER_VERIFIER_KEY}
    ports:
      - 3005:3305
    volumes:
      - ./gpodder/g2g.db:/gpodder2go/g2g.db
    networks:
      - gpodder
    
    

networks:
  directus:
  foundry:
  gpodder:

volumes:
  caddy_data:
    external: true
  caddy_config: